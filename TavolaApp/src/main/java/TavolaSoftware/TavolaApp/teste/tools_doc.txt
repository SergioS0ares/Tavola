Pacote: tools

=== ResponseExceptionHandler.java ===
package TavolaSoftware.TavolaApp.tools;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;

import java.time.LocalDateTime;
import java.util.*;

public class ResponseExceptionHandler {

    private final List<String> mensagensErro = new ArrayList<>();

    // String obrigatória
    public void checkEmptyStrting(String nomeCampo, String valor) {
        if (valor == null || valor.isBlank()) {
            mensagensErro.add("O campo '" + nomeCampo + "' é obrigatório.");
        }
    }

    // Objeto genérico obrigatório (UUID, Endereco, etc)
    public void checkEmptyObject(String nomeCampo, Object valor) {
        if (valor == null) {
            mensagensErro.add("O campo '" + nomeCampo + "' é obrigatório.");
        }
    }

    // Número obrigatório (ex: valor > 0)
    public void checkMinimmumNumber(String nomeCampo, Number valor, double minimo) {
        if (valor == null || valor.doubleValue() <= minimo) {
            mensagensErro.add("O campo '" + nomeCampo + "' deve ser maior que " + minimo + ".");
        }
    }

    // Lista obrigatória
    public void checkEmptyList(String nomeCampo, List<?> lista) {
        if (lista == null || lista.isEmpty()) {
            mensagensErro.add("A lista '" + nomeCampo + "' não pode estar vazia.");
        }
    }

    // UUID obrigatório
    public void checkUUID(String nomeCampo, UUID valor) {
        if (valor == null) {
            mensagensErro.add("O campo '" + nomeCampo + "' é obrigatório.");
        }
    }

    // Condição genérica (quando quiser customizar a mensagem)
    public void checkCondition(String mensagem, boolean condicaoInvalida) {
        if (condicaoInvalida) {
            mensagensErro.add(mensagem);
        }
    }

    // Resultado
    public boolean errors() {
        return !mensagensErro.isEmpty();
    }

    public ResponseEntity<Object> generateResponse(HttpStatus status) {
        return new ResponseEntity<>(new ResponseErrors(status.value(), mensagensErro, LocalDateTime.now()), status);
    }

    // Estrutura do JSON de retorno
    // SIM, ISSO É UMA SUBCLASSE INTERNA!
    private static class ResponseErrors {
        private int status;
        private List<String> mensagens;
        private LocalDateTime timestamp;

        public ResponseErrors(int status, List<String> mensagens, LocalDateTime timestamp) {
            this.status = status;
            this.mensagens = mensagens;
            this.timestamp = timestamp;
        }

        public int getStatus() { return status; }
        public List<String> getMensagens() { return mensagens; }
        public LocalDateTime getTimestamp() { return timestamp; }
    }
}
=== FIM ResponseExceptionHandler.java ===

=== Usuario.java ===
package TavolaSoftware.TavolaApp.tools;

import java.util.UUID;

import jakarta.persistence.Column;
import jakarta.persistence.Embedded;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.MappedSuperclass;

@MappedSuperclass
public abstract class Usuario {

    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    private UUID id;

    @Column(nullable = false)
    private String nome;

    @Embedded
    private Endereco endereco;

    @Column(nullable = false, unique = true)
    private String email;

    @Column(nullable = false)
    private String senha;

    @Column(nullable = false)
    private TipoUsusario tipo;

    // Getters e Setters
    public UUID getId() { return id; }
    public void setId(UUID id) { this.id = id; }

    public String getNome() { return nome; }
    public void setNome(String nome) { this.nome = nome; }

    public Endereco getEndereco() { return endereco; }
    public void setEndereco(Endereco endereco) { this.endereco = endereco; }

    public String getEmail() { return email; }
    public void setEmail(String email) { this.email = email; }

    public String getSenha() { return senha; }
    public void setSenha(String senha) { this.senha = senha; }

    public TipoUsusario getTipo() { return tipo; }
    public void setTipo(TipoUsusario tipo) { this.tipo = tipo; }
}
=== FIM Usuario.java ===

=== TipoUsusario.java ===
package TavolaSoftware.TavolaApp.tools;

public enum TipoUsusario {

	CLIENTE,
	RESTAURANTE;
}
=== FIM TipoUsusario.java ===

=== Servicos.java ===
package TavolaSoftware.TavolaApp.tools;

public class Servicos {

	private boolean log;

	private boolean admMesas;

	private boolean admCardapio;

	private boolean accessIA;

	public boolean isLog() { return log; }
	public void setLog(boolean log) { this.log = log; }

	public boolean isAdmMesas() { return admMesas; }
	public void setAdmMesas(boolean acesso) { this.admMesas = acesso; }

	public boolean isAdmCardapio() { return admCardapio; }
	public void setAdmCardapio(boolean acesso) { this.admCardapio = acesso; }

	public boolean isAccessIA() { return accessIA; }
	public void setAccessIA(boolean acesso) { this.accessIA = acesso; }
}
=== FIM Servicos.java ===

=== Mesas.java ===
package TavolaSoftware.TavolaApp.tools;

import jakarta.persistence.Embeddable;

@Embeddable
public class Mesas {

	private String imagem;
	private String descricao;
	private String nome;
	private boolean disponivel;

	public boolean isDisponivel() {
		return disponivel;
	}
	public void setDisponivel(boolean disponivel) {
		this.disponivel = disponivel;
	}

	public String getDescricao() {
		return descricao;
	}
	public void setDescricao(String descricao) {
		this.descricao = descricao;
	}

	public String getImagem() {
		return imagem;
	}
	public void setImagem(String imagem) {
		this.imagem = imagem;
	}

	public String getNome() {
		return nome;
	}
	public void setNome(String nome) {
		this.nome = nome;
	}
}
=== FIM Mesas.java ===

=== Endereco.java ===
package TavolaSoftware.TavolaApp.tools;

import jakarta.persistence.Embeddable;

@Embeddable
public class Endereco {

	private String cep;
	private String estado;
	private String cidade;
	private String bairro;
	private String rua;
	private String numero;
	private String complemento;

	public String getCep() { return cep; }
	public void setCep(String cep) { this.cep = cep; }

	public String getEstado() { return estado; }
	public void setEstado(String estado) { this.estado = estado; }

	public String getCidade() { return cidade; }
	public void setCidade(String cidade) { this.cidade = cidade; }

	public String getBairro() { return bairro; }
	public void setBairro(String bairro) { this.bairro = bairro; }

	public String getRua() { return rua; }
	public void setRua(String rua) { this.rua = rua; }

	public String getNumero() { return numero; }
	public void setNumero(String numero) { this.numero = numero; }

	public String getComplemento() { return complemento; }
	public void setComplemento(String complemento) { this.complemento = complemento; }
}
=== FIM Endereco.java === 